{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","cn","classes","dialogsItems","active","src","alt","to","id","name","Message","message","text","maxLength","maxLengthCreator","AddMessageReduxForm","reduxForm","form","box","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","button","Dialogs","DialogObj","MessagesPage","DialogsData","map","key","MesObj","MessagesData","dialogs","messages","formData","AddMess","newMessageText","resetForm","Composed","compose","connect","state","dispatch","addMessageActionCreator","reset","withAuthRedirect"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,yBAAyB,IAAM,qBAAqB,OAAS,0B,iHCgB/LC,EAXI,SAACC,GAChB,OAEI,yBAAKC,UAAWC,IAAGC,IAAQC,aAAcD,IAAQE,SAC7C,yBAAKC,IAAI,iFAAiFC,IAAI,KAC9F,kBAAC,IAAD,CAASC,GAAI,YAAcR,EAAMS,IAC5BT,EAAMU,QCERC,EAVC,SAACX,GACb,OAEQ,yBAAKC,UAAWE,IAAQS,SACnBZ,EAAMa,O,kCCqCnBC,EAAYC,YAAiB,IAqB3BC,EAAsBC,YAAU,CAACC,KAAM,cAAjBD,EAnBL,SAACjB,GACpB,OAAQ,6BACA,6BAGI,0BAAOC,UAAWE,IAAQgB,IAAKC,SAAUpB,EAAMqB,cAC3C,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUd,KAAM,iBAAkBe,YAAa,wBAAyBC,SAAU,CAACC,IAAUb,KAC/G,6BACI,4BAAQb,UAAWE,IAAQyB,QAA3B,sBAcTC,EA1DC,SAAC7B,GAEb,IAAI8B,EAAY9B,EAAM+B,aAAaC,YAAYC,KAAI,SAACC,GAAD,OAAS,kBAAC,EAAD,CAAYA,IAAKA,EAAIzB,GAAIC,KAAMwB,EAAIxB,KAAMD,GAAIyB,EAAIzB,QACzG0B,EAASnC,EAAM+B,aAAaK,aAAaH,KAAI,SAACC,GAAD,OAAS,kBAAC,EAAD,CAASA,IAAKA,EAAIzB,GAAII,KAAMqB,EAAIrB,UAW1F,OAEI,yBAAKZ,UAAWE,IAAQkC,SAEpB,yBAAKpC,UAAWE,IAAQC,cACnB0B,GAGL,yBAAK7B,UAAWE,IAAQmC,UACpB,6BAAMH,GAEN,kBAACnB,EAAD,CAAqBI,SAlBb,SAACmB,GACjBvC,EAAMwC,QAAQD,EAASE,gBACvBzC,EAAM0C,UAAU,oB,+BCOpBC,EAAWC,YACXC,aAnBoB,SAACC,GACrB,MAAO,CACHf,aAAce,EAAMf,iBAID,SAACgB,GACxB,MAAO,CACHP,QAAS,SAACC,GACNM,EAASC,YAAwBP,KAErCC,UAAW,SAACxB,GACR6B,EAASE,YAAM/B,SAQvBgC,IAFWN,CAGbf,GAEac","file":"static/js/3.62634ea9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1-j0T\",\"dialogsItems\":\"Dialogs_dialogsItems__2MVrn\",\"messages\":\"Dialogs_messages__2mr1G\",\"message\":\"Dialogs_message__1thvn\",\"box\":\"Dialogs_box__xBXMM\",\"button\":\"Dialogs_button__1OaKv\"};","import classes from '../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport cn from 'classnames'\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        \r\n        <div className={cn(classes.dialogsItems, classes.active)}>\r\n            <img src=\"https://cdn.iconscout.com/icon/premium/png-256-thumb/stormtrooper-1-617497.png\" alt=\"\"/>\r\n            <NavLink to={'/dialogs/' + props.id}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n};\r\nexport default DialogItem","import classes from '../Dialogs.module.css'\r\nimport React from \"react\";\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n\r\n            <div className={classes.message}>\r\n                {props.text}\r\n\r\n            </div>\r\n\r\n    )\r\n};\r\nexport default Message","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utilites/validators/validators\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let DialogObj = props.MessagesPage.DialogsData.map((key) => <DialogItem key={key.id} name={key.name} id={key.id}/>);\r\n    let MesObj = props.MessagesPage.MessagesData.map((key) => <Message key={key.id} text={key.text}/>);\r\n\r\n\r\n    //набранный текст хранится в стейте redux-form\r\n    let addNewMessage = (formData) => {\r\n        props.AddMess(formData.newMessageText)\r\n        props.resetForm('addMessage')\r\n    }\r\n\r\n    // if (!props.isAuth) {return <Redirect to={'/login'}/>}\r\n\r\n    return (\r\n\r\n        <div className={classes.dialogs}>\r\n\r\n            <div className={classes.dialogsItems}>\r\n                {DialogObj}\r\n            </div>\r\n\r\n            <div className={classes.messages}>\r\n                <div>{MesObj}</div>\r\n\r\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nlet maxLength = maxLengthCreator(10)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (<div>\r\n            <div>\r\n\r\n\r\n                <form  className={classes.box} onSubmit={props.handleSubmit}>\r\n                    <Field component={Textarea} name={'newMessageText'} placeholder={'Enter your message...'} validate={[required, maxLength]}/>\r\n                    <div>\r\n                        <button className={classes.button}>Add Message</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'addMessage'})(AddMessageForm)\r\n\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport { addMessageActionCreator } from \"../Redux/message-reducer\"\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../Hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {reset} from 'redux-form';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        MessagesPage: state.MessagesPage,\r\n\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        AddMess: (newMessageText) => {\r\n            dispatch(addMessageActionCreator(newMessageText))\r\n        },\r\n        resetForm: (form) => {\r\n            dispatch(reset(form))\r\n        }\r\n    }\r\n};\r\n\r\n\r\nlet Composed = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\nexport default Composed\r\n"],"sourceRoot":""}